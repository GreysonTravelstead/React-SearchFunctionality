{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/Searchbox.js","Components/Scroll.js","Components/ErrorBoundry.js","Containers/App.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","React","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"2PAiBeA,EAfF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAGxB,OACI,sBAAKC,UAAW,sDAAhB,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA2BH,EAA3B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCiBLK,EAvBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAKf,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAKC,GACb,OACI,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCAdC,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKV,UAAU,MAAf,SACI,uBACAA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCIPI,G,MAXA,SAACC,GACZ,OAEI,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACKJ,EAAMK,aCoBJC,E,kDAvBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,8DAODC,EAAOC,GAErBC,KAAKC,SAAS,CAACJ,UAAU,M,+BAKzB,OAAOG,KAAKJ,MAAMC,SAClB,2DAEIG,KAAKX,MAAMK,a,GAlBKQ,IAAMC,WC2DnBC,E,kDAjDX,aAAe,IAAD,8BACV,gBAeJC,eAAiB,SAACC,GACd,EAAKL,SAAS,CAAClB,YAAauB,EAAMC,OAAOC,SAfzC,EAAKZ,MAAQ,CACTlB,OAAQ,GACRK,YAAa,IAJP,E,gEAQO,IAAD,OAChB0B,MAAM,8CACDC,MAAK,SAAAC,GAAa,OAAOA,EAASC,UAClCF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAACvB,OAAQmC,S,+BAUpC,IAAD,EACyBb,KAAKJ,MAA5BlB,EADF,EACEA,OAAQK,EADV,EACUA,YACT+B,EAAiBpC,EAAOqC,QAAO,SAAAC,GACjC,OAAOA,EAAM7C,KAAK8C,cAAcC,SAASnC,EAAYkC,kBAIzD,OAASvC,EAAOyC,OAGZ,sBAAK7C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,kCACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKK,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU3B,OAAQoC,WAPlC,6C,GAhCUZ,IAAMC,W,MCFxBiB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1fc0812a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n\r\n   \r\n    return (\r\n        <div className= 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={ `https://robohash.org/${id}?200x200` } />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({robots}) => {\r\n\r\n    \r\n    //We use brackets to indicate we are using javascript. This allows us to combine javascript and html together\r\n    //using map below we are able to loop through each item in robots array. Remember when using a loop with react we should give each iteration a key\r\n    return(\r\n        <div>\r\n            {\r\n                robots.map((user,i) => {\r\n                    return (\r\n                        <Card \r\n                        key={i} \r\n                        id={robots[i].id} \r\n                        name={robots[i].name} \r\n                        email={robots[i].email} \r\n                        />\r\n                    );\r\n                })\r\n            }   \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n            className='pa3 ba b--green bg-lightest-blue'\r\n            type='search' \r\n            placeholder='Search Robots'\r\n            onChange={searchChange} \r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n       \r\n        <div style={{ overflowY: 'scroll', border: '5px solid black', height: '700px'}}>\r\n            {props.children}\r\n        </div>\r\n       \r\n    )\r\n\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n\r\n        this.setState({hasError: true})\r\n\r\n    }\r\n\r\n    render() {\r\n        return this.state.hasError ?\r\n        <h1>Sorry. There is an Error.</h1> :\r\n        (\r\n            this.props.children\r\n        )\r\n         \r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React from 'react';\r\nimport CardList from '../Components/CardList';\r\nimport SearchBox from '../Components/Searchbox';\r\nimport './App.css';\r\nimport Scroll from '../Components/Scroll';\r\nimport ErrorBoundary from '../Components/ErrorBoundry';\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    //App component has two states. Robots and search field. We use the constructor function to capture this state.\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => {return response.json();})\r\n            .then(users => this.setState({robots: users}));\r\n        \r\n    }\r\n\r\n    //On the search change we will set the new state to the triggered event and the set that as the state.\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value});\r\n    }\r\n\r\n    //Render the new state/show the search results\r\n    render() {\r\n        const {robots, searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        //allows us to notify the user that the render is loading if it takes time\r\n        //below is the same as an if else structure \r\n        return (!robots.length) ?\r\n        <h1>loading</h1> :\r\n        (\r\n            <div className='tc'>\r\n                <h1 className='f1'>Search Functionality</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <ErrorBoundary>\r\n                        <CardList robots={filteredRobots}/>\r\n                    </ErrorBoundary>\r\n                </Scroll>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n        \r\n            \r\n    \r\n\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}